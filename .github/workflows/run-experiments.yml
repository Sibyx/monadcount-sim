name: Run Experiments

on:
  push:
  pull_request:

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake g++ python3 python3-pip libxml2-utils openmpi-bin libopenmpi-dev qt6-base-dev

      - name: Cache NS-3 Installation
        uses: actions/cache@v4
        id: ns3-cache
        with:
          path: extern/ns3-dist
          key: ns3-${{ runner.os }}-${{ github.ref_name }}-${{ hashFiles('Makefile', 'extern/ns3-src/**') }}
          restore-keys: |
            ns3-${{ runner.os }}-${{ github.ref_name }}-
            ns3-${{ runner.os }}-

      - name: Cache CMake Build Directory
        uses: actions/cache@v4
        id: cmake-cache
        with:
          path: build
          key: cmake-${{ runner.os }}-${{ github.ref_name }}-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: |
            cmake-${{ runner.os }}-${{ github.ref_name }}-
            cmake-${{ runner.os }}-

      - name: Build Core (NS-3 etc.)
        if: steps.ns3-cache.outputs.cache-hit != 'true'
        run: make ns3

      - name: Build MonadCountSim
        run: make build

      - name: List Available Scenarios
        id: list
        run: |
          ./build/bin/monadcount_sim --list-scenarios > scenario_list.txt
          cat scenario_list.txt
          echo "scenarios=$(paste -sd, scenario_list.txt)" >> "$GITHUB_OUTPUT"

      - name: Run All Scenarios
        run: |
          IFS=',' read -ra SCENARIOS <<< "${{ steps.list.outputs.scenarios }}"
          for scenario in "${SCENARIOS[@]}"; do
            echo "Running scenario: $scenario"
            ./build/bin/monadcount_sim --scenario "$scenario"
          done

      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: experiment-results
          path: data/
